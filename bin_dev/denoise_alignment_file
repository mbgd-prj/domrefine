#!/usr/bin/perl -w
use strict;
use File::Basename;
use Getopt::Std;
my $PROGRAM = basename $0;
my $USAGE=
"Usage: $PROGRAM ALIGNMENT_FILE
";

use DomRefine::Read;
use DomRefine::Align;
use DomRefine::Score;
use DomRefine::General;

### Settings ###
my %OPT;
getopts('s:', \%OPT);

my $SCORE_THRESHOLD = -0.5;
if (defined $OPT{s}) {
    $SCORE_THRESHOLD = $OPT{s};
}

if (!@ARGV) {
    print STDERR $USAGE;
    exit 1;
}
my ($ALIGNMENT_FILE) = @ARGV;
my @ALIGNMENT = ();
my ($DCLST, @GENE) = read_and_parse_alignment($ALIGNMENT_FILE);

### Main ###
my @score_for_line = dsp_score_dclst($DCLST, $ALIGNMENT_FILE, lines => 1);
chomp(@score_for_line);
if (@ALIGNMENT != @score_for_line) {
    die;
}

my $count = 0;
my $n = @score_for_line;
my $LOG = "";
for (my $i=0; $i<@score_for_line; $i++) {
    $LOG .= $score_for_line[$i] . "\t" . $GENE[$i];
    if ($score_for_line[$i] <= $SCORE_THRESHOLD) {
        $LOG .= "\tREMOVED";
        $count ++;
    } else {
        print $ALIGNMENT[$i];
    }
    $LOG .= "\n";
}
print STDERR "removed $count out of " , scalar(@ALIGNMENT) , " sequences\n";
print STDERR $LOG;

################################################################################
### Function ###################################################################
################################################################################

sub read_and_parse_alignment {
    my ($alignment_file) = @_;

    my $cluster;
    if ($alignment_file =~ /\S+?(\d+)\.\w+/) {
        $cluster = $1;
    } else {
        die;
    }

    my $i = 0;
    my $dclst = "";
    my @gene = ();

    my $len = 0;
    open(FILE, $alignment_file) || die;
    while (my $line_org = <FILE>) {
        my $line = $line_org;
        chomp($line);
        if ($line =~ /^>/) {
            if ($line =~ /^>(\S+)$/) {
                my $gene = $1;
                push @gene, $gene;
                if ($len) {
                    $dclst .= "$len\n";
                    $len = 0;
                }
                $dclst .= "$cluster $gene 0 1 ";
                if (@ALIGNMENT) {
                    $i++;
                }
                $ALIGNMENT[$i] = "";
            } else {
                die;
            }
        } else {
            $line =~ s/-//g;
            $len += length($line);
        }
        $ALIGNMENT[$i] .= $line_org;
    }
    close(FILE);
    $dclst .= "$len\n";

    return ($dclst, @gene);
}
